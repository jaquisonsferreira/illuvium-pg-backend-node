import { Generated, Selectable, Insertable, Updateable } from 'kysely';

/**
 * Interfaces that define the database structure for Kysely
 */

/**
 * Interface for the 'assets' table
 */
export interface AssetTable {
  id: Generated<string>; // UUID generated by the database
  name: string;
  description: string;
  image_url: string; // Uses snake_case in the database
  price: number;
  tags: string[]; // Array of tags
  created_at: Generated<Date>;
  updated_at: Generated<Date>;
}

/**
 * Interface for the 'users' table
 */
export interface UserTable {
  id: Generated<string>; // UUID generated by the database
  privy_id: string; // Unique Privy user identifier
  nickname: string | null; // User's nickname
  avatar_url: string | null; // User's avatar URL
  experiments: string | null; // User's experiments as JSON string
  social_bluesky: string | null; // User's Bluesky social link
  social_discord: string | null; // User's Discord social link
  social_instagram: string | null; // User's Instagram social link
  social_farcaster: string | null; // User's Farcaster social link
  social_twitch: string | null; // User's Twitch social link
  social_youtube: string | null; // User's YouTube social link
  social_x: string | null; // User's X (Twitter) social link
  is_active: Generated<boolean>; // Whether the user is active
  created_at: Generated<Date>;
  updated_at: Generated<Date>;
}

/**
 * Interface for the 'linked_accounts' table
 */
export interface LinkedAccountTable {
  owner: string; // UUID reference to users.id
  type: string; // Type of linked account (wallet, email, discord, etc.)
  identifier: string; // Unique identifier for the account
  email_address: string | null; // Email address for email accounts
  label: string | null; // Optional label for the account
  created_at: Generated<Date>;
  updated_at: Generated<Date>;
}

/**
 * Main database interface, containing all tables
 */
export interface Database {
  assets: AssetTable;
  users: UserTable;
  linked_accounts: LinkedAccountTable;
  // Add other tables here as needed
}

/**
 * Helper types to facilitate selection, insertion, and update operations
 */
export type Asset = Selectable<AssetTable>;
export type NewAsset = Insertable<AssetTable>;
export type AssetUpdate = Updateable<AssetTable>;

export type User = Selectable<UserTable>;
export type NewUser = Insertable<UserTable>;
export type UserUpdate = Updateable<UserTable>;

export type LinkedAccount = Selectable<LinkedAccountTable>;
export type NewLinkedAccount = Insertable<LinkedAccountTable>;
export type LinkedAccountUpdate = Updateable<LinkedAccountTable>;
